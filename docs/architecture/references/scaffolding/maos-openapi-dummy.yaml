openapi: 3.0.0
info:
  title: MAOS Multi-Agent Orchestration API
  description: Dummy OpenAPI spec for scaffolding MCP server with Agenterra
  version: 1.0.0

paths:
  /orchestrate:
    post:
      operationId: orchestrate
      summary: Orchestrate parallel task execution across AI agents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tasks:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      description:
                        type: string
                      agent_type:
                        type: string
                        enum: [claude, openai, gemini, ollama, default]
                        default: default
                      dependencies:
                        type: array
                        items:
                          type: string
                      timeout_seconds:
                        type: integer
                        default: 300
                    required:
                      - description
                execution_strategy:
                  type: string
                  enum: [parallel, sequential, adaptive]
                  default: parallel
              required:
                - tasks
      responses:
        '200':
          description: Orchestration session started
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  status:
                    type: string
                  message:
                    type: string

  /register:
    post:
      operationId: register
      summary: Register available CLI tools with MAOS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_detect:
                  type: boolean
                  default: true
                  description: Automatically detect installed CLIs
      responses:
        '200':
          description: Registration complete
          content:
            application/json:
              schema:
                type: object
                properties:
                  detected:
                    type: array
                    items:
                      $ref: '#/components/schemas/AgentInfo'
                  registered_count:
                    type: integer
                  default_agent:
                    type: string

  /agents:
    get:
      operationId: listAgents
      summary: List registered CLI agents and their status
      responses:
        '200':
          description: List of registered agents
          content:
            application/json:
              schema:
                type: object
                properties:
                  agents:
                    type: array
                    items:
                      $ref: '#/components/schemas/AgentInfo'

  /agents/default:
    put:
      operationId: setDefaultAgent
      summary: Set the default agent type for orchestration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agent_type:
                  type: string
                  enum: [claude, openai, gemini, ollama]
              required:
                - agent_type
      responses:
        '200':
          description: Default agent updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  previous_default:
                    type: string
                  new_default:
                    type: string

  /sessions/{session_id}/status:
    get:
      operationId: getStatus
      summary: Get status of orchestration session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
        - name: include_details
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Session status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStatus'

  /sessions/{session_id}/cancel:
    post:
      operationId: cancelSession
      summary: Cancel running orchestration session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                force:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Session cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_id:
                    type: string
                  status:
                    type: string
                  message:
                    type: string

  /sessions/{session_id}/progress:
    get:
      operationId: getProgress
      summary: Stream real-time progress updates (SSE endpoint)
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Progress event stream
          content:
            text/event-stream:
              schema:
                type: string

components:
  schemas:
    AgentInfo:
      type: object
      properties:
        agent_type:
          type: string
        name:
          type: string
        command:
          type: string
        is_available:
          type: boolean
        is_authenticated:
          type: boolean
        error_message:
          type: string
          nullable: true
      required:
        - agent_type
        - name
        - command
        - is_available
        - is_authenticated

    SessionStatus:
      type: object
      properties:
        session_id:
          type: string
        status:
          type: string
          enum: [pending, running, completed, failed, cancelled]
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
        task_summary:
          type: object
          properties:
            total:
              type: integer
            completed:
              type: integer
            failed:
              type: integer
            running:
              type: integer
        tasks:
          type: array
          items:
            type: object
            properties:
              task_id:
                type: string
              description:
                type: string
              status:
                type: string
              agent_id:
                type: string
                nullable: true