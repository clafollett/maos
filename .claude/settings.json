{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(uv:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(grep:*)",
      "Bash(npm:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Write",
      "Edit",
      "Bash(chmod:*)",
      "Bash(touch:*)"
    ],
    "deny": []
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run \"$(git rev-parse --show-toplevel 2>/dev/null || pwd)/.claude/hooks/pre_tool_use.py\""
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run \"$(git rev-parse --show-toplevel 2>/dev/null || pwd)/.claude/hooks/post_tool_use.py\""
          }
        ]
      },
      {
        "matcher": "Edit|MultiEdit|Update",
        "hooks": [
          {
            "type": "command",
            "command": "if echo '$(.tool_input.file_path)' | grep -q '\\.rs$'; then cargo fmt && cargo clippy --fix --allow-dirty --allow-staged --files '$(.tool_input.file_path)' -- -D warnings; fi"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run \"$(git rev-parse --show-toplevel 2>/dev/null || pwd)/.claude/hooks/notification.py\" --notify"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run \"$(git rev-parse --show-toplevel 2>/dev/null || pwd)/.claude/hooks/stop.py\" --chat"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run \"$(git rev-parse --show-toplevel 2>/dev/null || pwd)/.claude/hooks/subagent_stop.py\""
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run \"$(git rev-parse --show-toplevel 2>/dev/null || pwd)/.claude/hooks/user_prompt_submit.py\" --log-only"
          }
        ]
      }
    ]
  }
}
